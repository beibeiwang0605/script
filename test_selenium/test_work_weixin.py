# Generated by Selenium IDE
# @Time ： 2020/3/28 18:23
# @Auth ： beibei
#知识点：1、隐式和显示等待 2、参数化 3、调用已打开的chrome绕过扫码登录
# 页面加载出来，使用显示等待找不到元素时，判断问题思路：
# 1、使用sleep强制等待，看是否可以成功（不建议使用）2、使用循环显示等待

import pytest
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
# from selenium.webdriver.common.actions.mouse_button import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait

userinfo=[('王晓书','wang xiaoshu','wangxiaoshu123','18887876565')]

class TestWorkWeixin():
    def setup_method(self):
        """每个测试用例执行前调用的方法，进行驱动浏览器，打开页面等设置"""
        # 设置chrome浏览器选项，调用已打开的chrome进程，绕过扫码登录;  chrome --remote-debugging-port-9222
        chromeOptions = Options()
        chromeOptions.debugger_address = "127.0.0.1:9222"
        self.driver = webdriver.Chrome(options=chromeOptions)
        # 打开页面
        self.driver.get("https://work.weixin.qq.com/wework_admin/frame")
        # 设置浏览器分辨率
        self.driver.set_window_size(1552, 840)
        # 隐式等待时间为5秒
        self.driver.implicitly_wait(5)   #在这里设置后，全局生效

    def wait(self, timeout, method):
        """显式等待方法"""
        WebDriverWait(self.driver, timeout).until(method)

    def wait_element(self,x):
        """判断是否元素出现可点击，如果没有循环点击"""
        size = len(self.driver.find_elements(By.ID,'js_tips'))   # 注意使用len时，不是element，是elements
        if size < 1:
            self.driver.find_element(By.ID, 'js_tips').click()
        return size >=1
       # 使用：WebDriverWait(self.driver,10).until(self,wait_element)


    @pytest.mark.parametrize('name,nickname,userId,mobile',userinfo)
    def test_member_add(self, name, nickname,userId,mobile):
        """首页-添加成员-填写信息-保存"""
        self.driver.find_element(By.CSS_SELECTOR,'.index_service_cnt_itemWrap:nth-child(1) .index_service_cnt_item_title').click()
        self.driver.find_element(By.CSS_SELECTOR,'#username').click()
        self.driver.find_element(By.CSS_SELECTOR, '#username').send_keys(name)
        self.driver.find_element(By.CSS_SELECTOR,'#memberAdd_english_name').click()
        self.driver.find_element(By.CSS_SELECTOR, '#memberAdd_english_name').send_keys(nickname)
        self.driver.find_element(By.CSS_SELECTOR, '#memberAdd_acctid').click()
        self.driver.find_element(By.CSS_SELECTOR, '#memberAdd_acctid').send_keys(userId)
        self.driver.find_element(By.CSS_SELECTOR, '.member_edit_sec:nth-child(1) .ww_label:nth-child(2) > .ww_radio').click()
        self.driver.find_element(By.CSS_SELECTOR, '#memberAdd_phone').click()
        self.driver.find_element(By.CSS_SELECTOR, '#memberAdd_phone').send_keys(mobile)
        self.driver.find_element(By.CSS_SELECTOR, '.member_colRight_operationBar:nth-child(3) > .js_btn_save').click()
        expected = (By.CSS_SELECTOR, '#js_tips')
        self.wait(10,expected_conditions.visibility_of_element_located(expected))
        assert self.driver.find_element(*expected).text == '保存成功'
        #time.sleep(2)
        #size1 = len(self.driver.find_elements(By.CSS_SELECTOR, '[title=name]'))
        #assert size1 > 0

    def teardown_method(self):
        """每个测试用例执行完毕时调用的方法，进行退出操作"""
        self.driver.quit()
